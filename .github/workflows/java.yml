name: Build OddsAPI app

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
  BOOKMAKERS: $BOOKMAKERS
  MARKETS: $MARKETS
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
  ISSUER_URI: ${{ secrets.ISSUER_URI }}
  AUDIENCE: ${{ secrets.AUDIENCE }}
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "oddsAPI"
  cancel-in-progress: false

jobs:

  setupJava:
    name: setup java

    runs-on: ubuntu-latest

    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Copy settings.xml
        run: cp .github/settings.xml $HOME/.m2/settings.xml

  build:
    name: Build
    runs-on: ubuntu-latest
    # uses: bhanna1693/OddsAPI/.github/workflows/setup-jfrog.yml@main

    steps:
      - uses: ./.github/workflows/setup-jfrog.yml

      - name: Build with JF Maven
        run: jf mvn clean install -DskipTests=true
  #  test:
  #    name: Test
  #    runs-on: ubuntu-latest
  #
  #    steps:
  #      - name: Test with JF Maven
  #        run: jf mvn test

  publish:
    name: Publish to Artifactory
    runs-on: ubuntu-latest

    steps:
      - uses: ./.github/workflows/setup-jfrog.yml

      - name: Deploy to Artifactory
        run: jf mvn deploy -DskipTests=true
