name: Build OddsAPI app

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: "us-east-1"
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
  BOOKMAKERS: $BOOKMAKERS
  MARKETS: $MARKETS
  CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
  ISSUER_URI: ${{ secrets.ISSUER_URI }}
  AUDIENCE: ${{ secrets.AUDIENCE }}


# Permission can be added at job level or workflow level
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "oddsAPI"
  cancel-in-progress: false


jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Copy settings.xml to configure Artifactory
        run: cp .github/settings.xml $HOME/.m2/settings.xml

      - name: Replace Artifactory Credentials in settings.xml
        run: |
          sed -i 's/${env.ARTIFACTORY_USERNAME}/${ARTIFACTORY_USERNAME}/g' $HOME/.m2/settings.xml
          sed -i 's/${env.ARTIFACTORY_PASSWORD}/${ARTIFACTORY_PASSWORD}/g' $HOME/.m2/settings.xml
        env:
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_ENV_1: ${{ secrets.JF_ENV_1 }}

      - name: Setup JFrog mvn-config
        run: jf mvn-config

      - name: CAT
        run: cat $HOME/.m2/settings.xml

      - name: Build with JF Maven
        run: jf mvn clean install -DskipTests=true

      - name: Deploy to Artifactory
        run: jf mvn deploy -DskipTests=true
